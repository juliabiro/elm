Elm.Background = Elm.Background || {};
Elm.Background.make = function (_elm) {
   "use strict";
   _elm.Background = _elm.Background || {};
   if (_elm.Background.values) return _elm.Background.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var drawBuilding = function (building) {
      return A3($Graphics$Collage.collage,
      500,
      500,
      _U.list([A2($Graphics$Collage.filled,building.color,A2($Graphics$Collage.rect,building.width,building.height))]));
   };
   var redraw = F2(function (action,model) {
      var _p0 = action;
      var _p1 = A2($Random.generate,A2($Random.$float,100,400),model.seed);
      var height$ = _p1._0;
      var seed$ = _p1._1;
      var _p2 = A2($Random.generate,A2($Random.$float,80,100),model.seed);
      var width$ = _p2._0;
      var seed$ = _p2._1;
      return _U.update(model,{height: height$,width: width$,seed: seed$});
   });
   var Redraw = {ctor: "Redraw"};
   var view = F2(function (address,building) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.button,_U.list([A2($Html$Events.onClick,address,Redraw)]),_U.list([$Html.text("redraw")])),$Html.fromElement(drawBuilding(building))]));
   });
   var init = {height: 100,width: 10,seed: $Random.initialSeed(0),color: A3($Color.rgb,255,147,89)};
   var Building = F4(function (a,b,c,d) {    return {height: a,width: b,seed: c,color: d};});
   return _elm.Background.values = {_op: _op,Building: Building,init: init,Redraw: Redraw,redraw: redraw,drawBuilding: drawBuilding,view: view};
};