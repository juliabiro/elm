Elm.Building = Elm.Building || {};
Elm.Building.make = function (_elm) {
   "use strict";
   _elm.Building = _elm.Building || {};
   if (_elm.Building.values) return _elm.Building.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var drawBuilding = function (building) {
      return A2($Graphics$Collage.moveY,
      building.positionY + building.height / 2,
      A2($Graphics$Collage.moveX,
      building.positionX + building.width / 2,
      A2($Graphics$Collage.filled,building.color,A2($Graphics$Collage.rect,building.width,building.height))));
   };
   var reinit = F2(function (_p0,building) {
      var _p1 = _p0;
      var _p5 = _p1._0;
      var _p4 = _p1._1;
      var _p2 = A2($Random.generate,A2($Random.$float,100,400),_p5);
      var height$ = _p2._0;
      var seed$ = _p2._1;
      var _p3 = A2($Random.generate,A2($Random.$float,80,150),_p5);
      var width$ = _p3._0;
      var seed$ = _p3._1;
      return {ctor: "_Tuple3"
             ,_0: _U.update(building,{height: height$,width: width$,positionX: _p4,color: A3($Color.rgb,156,35,89)})
             ,_1: seed$
             ,_2: _p4 + width$};
   });
   var setPositionX = F2(function (f,b) {    return _U.update(b,{positionX: f});});
   var Building = F5(function (a,b,c,d,e) {    return {height: a,width: b,positionX: c,positionY: d,color: e};});
   return _elm.Building.values = {_op: _op,Building: Building,setPositionX: setPositionX,reinit: reinit,drawBuilding: drawBuilding};
};